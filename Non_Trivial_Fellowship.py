# NON-TRIVIAL FELLOWSHIP

# IMPORTS ========================

import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

# VARIABLES ======================

x_computer_data = np.array([1993.455,1993.874,1994.455,1994.874,1995.455,1995.874,1996.455,1996.874,1997.455,1997.874,1998.455,1998.874,1999.455,1999.874,2000.455,2000.874,2001.455,2001.874,2002.455,2002.874,2003.455,2003.874,2004.455,2004.874,2005.455,2005.874,2006.455,2006.874,2007.455,2007.874,2008.455,2008.874,2009.455,2009.874,2010.455,2010.874,2011.455,2011.874,2012.455,2012.874,2013.455,2013.874,2014.455,2014.874,2015.455,2015.874,2016.455,2016.874,2017.455,2017.874,2018.455,2018.874,2019.455,2019.874,2020.455,2020.874,2021.455,2021.874,2022.455,2022.874,2023.455,2023.874,2024.455])
y_computer_data = np.array([0.0011,0.0015,0.0023,0.0027,0.0039,0.0048,0.0059,0.008,0.0128,0.0169,0.0226,0.0294,0.0391,0.0509,0.0642,0.0881,0.1083,0.135,0.2223,0.2918,0.370,0.5267,0.8123,1.1,1.7,2.3,2.8,3.5,5.0,7.0,12.2,17.4,22.6,28.0,32.4,43.8,58.9,74.1,123.4,162.1,228.6,255.0,278.6,313.0,364.1,422.6,572.1,676.8,753.3,849.6,1200,1400,1600,1600,2200,2400,2800,3000,4400,4900,5200,7000,8200])

x_ai_data = np.array([1993.996,1994.086,1994.086,1994.086,1994.086,1994.086,1995.991,1996.266,1996.549,1997.086,1997.958,1998.113,2000.086,2000.086,2001.700,2003.291,2004.116,2004.574,2005.086,2005.105,2007.560,2007.560,2009.541,2010.092,2010.452,2010.821,2010.821,2012.202,2012.266,2012.266,2012.266,2012.283,2012.832,2013.019,2013.111,2013.111,2013.127,2013.355,2013.450,2013.488,2013.810,2013.877,2014.016,2014.030,2014.052,2014.055,2014.086,2014.102,2014.108,2014.358,2014.549,2014.691,2014.850,2014.858,2015.049,2015.060,2015.111,2015.297,2015.505,2015.519,2015.600,2015.700,2015.738,2015.866,2016.044,2016.157,2016.363,2016.447,2016.447,2016.447,2016.496,2016.496,2016.557,2016.611,2016.797,2016.821,2016.821,2016.821,2016.910,2016.963,2017.019,2017.086,2017.086,2017.146,2017.200,2017.450,2017.450,2017.503,2017.525,2017.605,2017.605,2017.652,2017.705,2017.746,2017.791,2017.821,2017.852,2017.863,2017.883,2017.918,2017.939,2018.016,2018.089,2018.100,2018.133,2018.180,2018.264,2018.269,2018.269,2018.310,2018.324,2018.422,2018.422,2018.447,2018.447,2018.477,2018.566,2018.574,2018.678,2018.743,2018.749,2018.755,2018.797,2018.816,2018.827,2018.827,2018.852,2018.852,2018.874,2018.944,2018.958,2019.030,2019.089,2019.094,2019.100,2019.102,2019.113,2019.194,2019.194,2019.205,2019.230,2019.241,2019.321,2019.336,2019.344,2019.350,2019.358,2019.388,2019.450,2019.455,2019.496,2019.496,2019.502,2019.525,2019.566,2019.753,2019.797,2019.797,2019.850,2019.863,2019.863,2019.896,2019.896,2019.915,2019.936,2019.947,2019.969,2019.991,2020.036,2020.036,2020.052,2020.108,2020.116,2020.124,2020.135,2020.160,2020.180,2020.180,2020.194,2020.202,2020.224,2020.272,2020.297,2020.313,2020.413,2020.488,2020.493,2020.514,2020.522,2020.547,2020.547,2020.582,2020.672,2020.752,2020.755,2020.888,2020.888,2020.891,2020.891,2020.894,2020.894,2020.925,2020.980,2020.999,2021.063,2021.068,2021.085,2021.092,2021.113,2021.113,2021.124,2021.202,2021.232,2021.275,2021.347,2021.347,2021.347,2021.361,2021.385,2021.413,2021.419,2021.419,2021.425,2021.436,2021.471,2021.485,2021.488,2021.488,2021.493,2021.525,2021.533,2021.563,2021.577,2021.657,2021.657,2021.663,2021.683,2021.700,2021.708,2021.766,2021.766,2021.805,2021.850,2021.874,2021.880,2021.918,2021.919,2021.930,2021.933,2021.933,2021.944,2021.947,2021.966,2021.969,2021.977,2021.982,2022.027,2022.036,2022.044,2022.055,2022.063,2022.172,2022.180,2022.189,2022.197,2022.213,2022.238,2022.280,2022.307,2022.329,2022.344,2022.355,2022.361,2022.369,2022.372,2022.413,2022.436,2022.480,2022.491,2022.516,2022.519,2022.538,2022.560,2022.574,2022.579,2022.586,2022.589,2022.594,2022.641,2022.644,2022.697,2022.727,2022.755,2022.788,2022.807,2022.839,2022.839,2022.842,2022.847,2022.855,2022.863,2022.888,2022.888,2022.888,2022.918,2022.944,2022.955,2022.960,2022.966,2022.971,2022.993,2022.993,2023.014,2023.052,2023.077,2023.124,2023.127,2023.127,2023.157,2023.165,2023.175,2023.197,2023.232,2023.291,2023.291,2023.305,2023.329,2023.332,2023.363,2023.372,2023.380,2023.399,2023.419,2023.425,2023.428,2023.436,2023.447,2023.466,2023.519,2023.525,2023.530,2023.533,2023.538,2023.574,2023.611,2023.616,2023.633,2023.633,2023.655,2023.697,2023.743,2023.746,2023.749,2023.761,2023.764,2023.839,2023.847,2023.905,2023.907,2023.915,2023.930,2023.936,2023.952,2023.952,2023.955,2023.958,2023.977,2023.999,2024.038,2024.038,2024.230,2024.238,2024.288,2024.383,2024.538,2024.547,2024.568,2024.592])
y_ai_data = np.array([0.00001750,0.00000453,0.00011700,0.00045400,0.00085900,0.01862200,0.00019600,0.00088200,0.00001290,0.00335800,0.02100800,0.00281100,0.06164400,6.12844800,0.06300000,1.30389900,2.78208000,0.00097400,0.11584800,0.02412500,773.03820000,1449.44700000,1.00000000,0.13078800,0.35000000,3.41463600,61.44000000,3.72697900,4.26870000,6.03937100,273.19680000,311.40000000,470.00000000,600.00000000,9.33120000,14.22000000,2612.73600000,4.21000000,1340.92800000,127.73380000,137.00000000,38.88000000,0.09084200,532.00000000,2.30000000,0.47520000,44.00000000,69.00000000,1555.20000000,9253.44000000,3411.07200000,91.00000000,518.40000000,56000.00000000,100.00000000,60.48000000,380000.00000000,73.00000000,23974.03000000,3.34000000,1557.14000000,26000.00000000,2.65000000,12100.00000000,5.62000000,1900000.00000000,21.30000000,10.50000000,3468.61500000,2200000.00000000,96.94080000,145.41120000,61.49294000,436000.00000000,29741.65000000,7.49000000,16.80000000,6620000.00000000,0.00854000,64000.00000000,3.57000000,551000.00000000,200000000.00000000,93939.06000000,66290.40000000,1.34000000,36679270.00000000,14463.36000000,2.34000000,309.00000000,2065.39200000,56400.00000000,10.60000000,474.00000000,3.40000000,3.31000000,843000.10000000,437.00000000,341000000.00000000,98.50000000,604609.50000000,7424.52500000,360.00000000,17578.13000000,272.53800000,8743950.00000000,127.00000000,34900.00000000,7260001.00000000,240.00000000,24000.00000000,168000.00000000,385296.90000000,68428.81000000,161740.80000000,75.90000000,11.00000000,34875.00000000,50939.20000000,108084.30000000,693.00000000,20.10000000,11000.00000000,1.02000000,72000.00000000,1800000.00000000,246.04800000,429.00480000,2780.00000000,285000.00000000,2.01000000,1.92000000,4300.00000000,7300.00100000,8900000.00000000,4153836.00000000,7300.00100000,7600.00000000,12441.60000000,4300000.00000000,37065.60000000,23200.00000000,89268.48000000,2470.00000000,2560.00000000,7300.00100000,637.00000000,521000.00000000,2320.00000000,424.00000000,1500000.00000000,1500000.00000000,4000.00000000,19400.00000000,4760.00100000,10900.00000000,9100000.00000000,60270000.00000000,328.00000000,158000.00000000,830000.00000000,865865.40000000,33000000.00000000,59250000.00000000,66.00000000,849346.60000000,48000.00000000,6200.00000000,13000000.00000000,67000004.00000000,780000.10000000,9720.00100000,1800000.00000000,100000.00000000,8160000.00000000,112000000.00000000,35000.00000000,38257.92000000,175799.80000000,15700000.00000000,44100.00000000,24000.00000000,1580.00000000,3100000.00000000,1784281.00000000,400000.00000000,314000000.00000000,2890.00000000,200000.00000000,8910000.00000000,33000000.00000000,137000000.00000000,27800.00000000,480000.00000000,2390000.00000000,7600000.00000000,82000000.00000000,1428296.00000000,2244465.00000000,1900000.00000000,4262000.00000000,460.00000000,124000.00000000,2990000.00000000,2099.52000000,562.00000000,29100.00000000,47900004.00000000,10500.00000000,1560000.00000000,78840.00000000,5490000.00000000,11000.00000000,48960000.00000000,37000000.00000000,39000004.00000000,73700000.00000000,4350000.00000000,35997696.00000000,210000.00000000,10500000.00000000,47000000.00000000,5500001.00000000,22500000.00000000,9470.00000000,280000.00000000,24057.60000000,26800000.00000000,81000000.00000000,3100.00000000,36679270.00000000,95600.01000000,82000.00000000,5540000.00000000,78000010.00000000,4420000.00000000,3400000.00000000,631000000.00000000,107000.00000000,1040000.00000000,42700004.00000000,9900000.00000000,6000000.00000000,918190.10000000,7300.00100000,600000.00000000,82200000.00000000,6200000.00000000,380000.00000000,25986700.00000000,1170000000.00000000,460000.00000000,1100000.00000000,41200000.00000000,48310000.00000000,4838400.00000000,354000000.00000000,374000000.00000000,157000.00000000,22500000.00000000,1040000000.00000000,157000000.00000000,430000000.00000000,204000000.00000000,54600.00000000,290000000.00000000,1100000.00000000,109.00000000,26500.00000000,576000000.00000000,2530000000.00000000,378000000.00000000,72000.00000000,50000000.00000000,60770.31000000,270000000.00000000,2720000.00000000,14600000.00000000,7240001.00000000,11000.00000000,17511138.00000000,73000000.00000000,396000000.00000000,13500001.00000000,2740000000.00000000,23439.98000000,16800000.00000000,140000.00000000,73500000.00000000,13801881.00000000,577000000.00000000,70000.00000000,93162700.00000000,51000000.00000000,4207267.00000000,65000.00000000,355000000.00000000,3400000.00000000,120000000.00000000,430000000.00000000,83174.84000000,33000000.00000000,2500000000.00000000,2530000000.00000000,51000000.00000000,1420000.00000000,3750944.00000000,324000000.00000000,130000.00000000,510000.00000000,215700.00000000,2580000000.00000000,5440000.00000000,29000.00000000,849000.10000000,12000000.00000000,2600000.00000000,6500000.00000000,350000.00000000,1200000.00000000,600000.00000000,610000000.00000000,550000000.00000000,240000000.00000000,21000000000.00000000,467000000.00000000,9700000.00000000,236000000.00000000,2900000000.00000000,7418511.00000000,49000.00000000,40200000.00000000,10100.00000000,9500000.00000000,7800000.00000000,39800000.00000000,45500004.00000000,180000.00000000,620000000.00000000,3760000000.00000000,23110002.00000000,50000000000.00000000,112000000.00000000,4490.00000000,160000000.00000000,160000000.00000000,84000000.00000000,810000000.00000000,3900.00000000,26000.00000000,7600000.00000000,30800002.00000000,53.37000000,3000010.00000000,84600000.00000000,400000000.00000000,7340000000.00000000,7920.00000000,50400000.00000000,250000000.00000000,194000.00000000,3870000000.00000000,30400000.00000000,45600000.00000000,21000000.00000000,180000000.00000000,10000000000.00000000,1300000000.00000000,26900000.00000000,387000000.00000000,12000000000.00000000,20000000000.00000000,486000000.00000000,6300000000.00000000,18000000000.00000000,1290000000.00000000,1070000000.00000000,10000000000.00000000])

x_processed_data = x_ai_data
y_processed_data = np.array([0.0104916933,0.002528028,0.0652934396,0.2533608683,0.4793766209,10.3922601095,0.039032048,0.1591434783,0.0020247612,0.3443585851,1.1852790429,0.1460658069,1.1056622366,109.9213795786,0.508424629,3.7476295208,4.308899658,0.0010894738,0.0878346444,0.0180231773,140.52191141,263.4786520607,0.0421792265,0.0044109216,0.0108100493,0.0806137302,1.4504935767,0.0365633805,0.0397596369,0.0562520669,2.5446167589,2.8619965262,2.9705330005,3.3576504538,0.0493123305,0.0751480345,13.6751055001,0.0193871437,5.8805484432,0.5537290745,0.5458873249,0.1523977607,0.0003483633,2.035688365,0.0087709165,0.0018113059,0.1669123821,0.2611052276,5.8796622015,33.6905391365,11.9136026407,0.3053940752,1.6667224262,179.6677708302,0.3045145195,0.1836293933,1138.2542197328,0.2084501615,64.6059378234,0.00895357,4.0514160422,65.2763729969,0.0065657127,28.7081529365,0.0120512014,3835.1287229568,0.0388383488,0.0184197122,6.0848466654,3859.3682677319,0.1664662393,0.2496993589,0.1029019286,713.4892523954,45.2303770035,0.0112876627,0.025318122,9976.5457049438,0.0000125304,92.9531911787,0.0051301058,781.877535788,283803.0982896577,131.8231820105,92.1052726733,0.0017803958,48734.0421391266,18.9228769191,0.0030413771,0.392244008,2.6218046478,70.6256175214,0.0130741811,0.5779209442,0.0040938017,0.0039526218,998.1722965163,0.5158948516,398817.4032633087,0.1124254276,680.2526590182,7.9386313102,0.3676222455,17.8295232085,0.2709657457,8455.2209406826,0.1170713798,32.0824029913,6673.8761546999,0.2157204916,21.4095676078,142.3610868028,326.4957465818,57.2542076951,135.3281075028,0.0627013013,0.0087790476,27.7490030384,38.9907285349,80.8124941114,0.5170352564,0.0149642857,8.068977591,0.0007432696,52.2661122661,1306.6528066528,0.1770767984,0.3087478722,1.9857142857,200.1269035533,0.001406661,0.0013207672,2.9172115834,4.9467000012,6022.4784532962,2809.5212060535,4.9248729459,5.0325963073,8.2386250285,2840.2683037745,24.3444648429,15.199819576,57.4490328755,1.5843122102,1.6391448093,4.6679513328,0.406610635,330.3874699847,1.4515614904,0.265,937.5,937.5,2.5,12.125,2.975000625,6.8125,5687.5,37668.75,0.205,98.75,518.75,533.5890935511,20336.2324989401,36076.5562775112,0.0396628051,506.9553879187,28.2667747821,3.6029205841,7355.862874951,37910.9878496286,437.2636608453,5.2778697019,973.0182359509,53.8162282327,4364.7210458479,59091.8997457285,18.2671577434,19.9675274165,91.0660518902,8098.1001420453,22.4834152334,11.9342690859,0.7757140443,1509.7233864207,827.3481731843,180.5256355019,141560.1463309662,1.2970329906,89.6065012831,3970.740268028,14706.4454371408,60602.82939189,12.0681723995,204.9735018345,1019.9735180281,3154.0000000001,34030.000000001,592.2352098201,930.6552704824,787.1505989732,1765.7030804336,0.1889030252,50.1419821826,1202.7070063694,0.8298102857,0.2218220109,11.432986205,18783.6813741895,4.094295302,608.2953020134,30.6517933619,2090.7773990561,4.1564776275,18295.4463596598,13574.7663551401,14308.5389770143,27039.4670371304,1590.3284671532,13081.4744658492,75.7826086957,3783.4904490199,16935.6239146607,1978.8831935843,8073.4313241107,3.3729428766,99.4911804613,8.5439349042,9517.8843871841,28742.3780487805,1.0940869272,12927.8382654779,33.5256144878,28.6890447562,1912.7059986816,26929.799101846,1524.5143233454,1168.8546110929,216322.2058582862,36.6342539631,352.7278614214,14482.1933592357,3336.6312741312,2007.6665069478,306.0633666667,2.4216630016,193.1730023274,26444.18604651,1977.7094542659,120.9355828221,8270.307131902,369239.5437262504,144.8406676783,341.4360508602,12759.7014925369,14872.8857566756,1484.0620842572,105085.8369098678,110312.7221037621,46.0459363958,6548.0364656378,300976.290097606,42226.1827608541,115054.803352669,54269.2307692271,14.4508928571,75978.5353535354,283.7165941578,0.0273985463,6.5539332539,140611.7647058821,612215.7434401956,90886.4426419428,17.2517321016,11925.287356322,14.4691214286,62808.2959641229,624.6817930271,3295.8353536985,1629.5447029437,2.459313804,3911.9038291746,16225.6644209853,87508.0428247457,2972.2560133466,602466.4147774987,5.1444930177,3684.2876583272,30.6622758873,15902.3546421559,2983.844042619,123059.6559096028,14.8161244696,19580.2424257619,10630.8143873439,872.8683268964,13.3793476125,73071.8215759494,699.3274753326,24651.8925279469,88163.0456057937,17.0200517484,6724.7728946723,509452.4920206291,515565.9219248766,10360.1272682775,287.6739077374,759.0200835888,65528.5967904757,26.2758740651,103.028511822,43.4752306945,520009.7134531362,1094.0634843712,5.8093990277,169.6365149254,2386.1186214449,516.8331736691,1292.0829341727,69.3601200628,237.6116147502,118.6844613918,120392.0103267895,108164.3705784788,46917.9004037686,4105316.28532975,91165.5802701421,1889.0192397935,45945.7829306698,562834.0459647183,1438.4924376731,9.4937806383,7773.9981360671,1.9492758437,1832.3816479649,1504.0323918887,7668.3137124855,8756.9571763615,34.3036477759,113243.2432432376,683547.3793820802,4184.9299152908,9033287.340462532,20156.3439567037,0.7861721688,27256.464465764,27157.0930891999,14082.9065300889,135799.4558258574,0.6436505436,4.1669216646,1180.6317662762,4775.1057640787,0.0082577659,460.5085690211,12960.6581352842,58397.2125435567,1066239.079184604,1.1211734321,7130.5703014661,35287.4010009237,27.2637995259,542925.0977930313,4245.1569485171,6367.7354227756,2929.9745449307,25092.3748740337,1386436.3098362675,179108.3708797713,3665.4861860312,52733.9462451332,1551332.8289795513,2580043.5188062773,61870.8094132074,782483.2186070177,2195121.95122,157317.073171,130487.804878,1219512.19512])

# FUNCTIONS ======================

e = 2.718281828459

def model_f(x, a, b, c):
    
    return a*(e**(b*(x-2015))) + c

def interpolation(y_1, y_0, r):

    Value = y_0 + (y_1 - y_0)*r
    
    return Value

popt, pcov = curve_fit(model_f, x_processed_data, np.log(y_processed_data), p0=[1,0.22,-1])

a_opt, b_opt, c_opt = popt
x_model = np.linspace(min(x_processed_data-0.5), max(x_processed_data+0.5), 100)
y_model = e**(model_f(x_model, a_opt, b_opt, c_opt))

plt.figure(figsize=(11, 6))  # Set a larger figure size for better clarity

plt.scatter(x_processed_data, y_processed_data, color='darkblue', s=50, edgecolor='black')
plt.plot(x_model,y_model, '-b', linewidth=10, alpha=0.6)

plt.yscale('log')            # Set the y-axis to a logarithmic scale
plt.xlabel('Publication Date', fontsize=14, fontweight='bold')  # X-axis label
plt.ylabel('Training Time (seconds)', fontsize=14, fontweight='bold')  # Y-axis label
plt.title(
    'Theoretical Time to Train AI Systems Using the\n'
    'Combined Computing Power of the TOP500 Supercomputers of the Era', #Title
    fontsize=16, fontweight='bold', pad=20
)
plt.grid(True, which='both', linestyle='--', linewidth=0.7)  # Add gridlines with customization
plt.tick_params(axis='both', which='major', labelsize=12)  # Customize tick labels
plt.tight_layout()         # Adjust layout to prevent clipping

plt.show()                 # Display the plot


# MAIN PROGRAM ==================

#trigger = False
#number = 0

#for element in range(0, len(x_ai_data)-4):
    
    #while trigger == False:
        
        #if x_ai_data[element] <= x_computer_data[number]:

            #lower = x_computer_data[number - 1]
            #upper = x_computer_data[number]

            #middle = x_ai_data[element]

            #r = (middle-lower)/(upper-lower)

            #y_0 = y_computer_data[number - 1]
            #y_1 = y_computer_data[number]

            #computer_power = interpolation(y_1, y_0, r)

            #time = y_ai_data[element]/computer_power

            #trigger = True
            
        #else:
            
            #number = number + 1
            
    #trigger = False
    #number = 0



